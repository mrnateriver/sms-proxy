apiVersion: redhatcop.redhat.io/v1alpha1
kind: RandomSecret
metadata:
  name: sms-proxy-hashing-secret
  namespace: sms-proxy
spec:
  authentication:
    path: kubernetes
    role: vault-config-operator
    serviceAccount:
      name: vault-init-sa
  isKVSecretsEngineV2: false
  name: hashing-secret
  path: kv/sms-proxy
  secretKey: hashing-secret
  secretFormat:
    passwordPolicyName: default-password-policy
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: sms-proxy-vault-csi-provider
  namespace: sms-proxy
spec:
  provider: vault
  secretObjects:
    - secretName: sms-proxy-secret
      type: Opaque
      data:
        - objectName: db-username
          key: db_username
        - objectName: db-password
          key: db_password
        - objectName: hashing-secret
          key: hashing_secret
  parameters:
    roleName: vault-config-operator # FIXME: proper role for accessing secrets
    vaultAddress: https://sms-proxy-vault-0.sms-proxy-vault-internal:8200
    vaultNamespace: sms-proxy
    # FIXME: unknown TLS certificate -- probably need to mount the TLS secret into every pod that mounts the CSI volume
    # FIXME: service account name? -- perhaps we need a separate SA anyway, since this is no longer just provisioning
    objects: |
      - objectName: "db_username"
        secretPath: "postgresql/postgresql-secret-engine/creds/postgresql-role-sms-proxy-app"
        secretKey: "username"
      - objectName: "db_password"
        secretPath: "postgresql/postgresql-secret-engine/creds/postgresql-role-sms-proxy-app"
        secretKey: "password"
      - objectName: "hashing_secret"
        secretPath: "kv/sms-proxy/hashing-secret"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sms-proxy-config
data:
  key: value
  # TODO: non-secret app config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sms-proxy
  namespace: sms-proxy
  labels:
    app: sms-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sms-proxy
  template:
    metadata:
      labels:
        app: sms-proxy
    spec:
      containers:
        # TODO: health checks
        - name: sms-proxy
          image: sms-proxy:latest # FIXME: local OCI image in the cluster
          imagePullPolicy: Never # FIXME: remove once actual OCI repository is available
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets"
              readOnly: true
          resources:
            limits:
              memory: "128Mi"
              cpu: "250m"
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: sms-proxy-secret
                  key: db-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sms-proxy-secret
                  key: db-password
            - name: HASHING_SECRET
              valueFrom:
                secretKeyRef:
                  name: sms-proxy-secret
                  key: hashing-secret
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: sms-proxy-vault-csi-provider
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
