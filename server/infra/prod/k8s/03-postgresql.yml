apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: postgresql-tls-certificate
  namespace: sms-proxy
spec:
  secretName: postgresql-tls-secret
  issuerRef:
    name: issuer-leaf
    kind: Issuer
  dnsNames:
    - "*.sms-proxy-postgresql"
  ipAddresses:
    - 127.0.0.1
  duration: 2160h
  renewBefore: 360h
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: bitnami-postgresql
  namespace: sms-proxy
spec:
  interval: 1h
  url: oci://registry-1.docker.io/bitnamicharts/postgresql
  ref:
    semver: "16.4.7"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: postgresql
  namespace: sms-proxy
spec:
  chartRef:
    kind: OCIRepository
    name: bitnami-postgresql
    namespace: sms-proxy
  interval: 1h
  values:
    volumePermissions:  
      enabled: true
    tls:
      enabled: true
      preferServerCiphers: true
      certificatesSecret: postgresql-tls-secret
      certFilename: "tls.crt"
      certKeyFilename: "tls.key"
    auth:
      database: sms-proxy
      existingSecret: postgresql-admin-password
      secretKeys:
        adminPasswordKey: password
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: PasswordPolicy
metadata:
  name: postgresql-admin-password-policy
  namespace: sms-proxy
spec:
  authentication: 
    path: kubernetes
    role: vault-config-operator
    serviceAccount:
      name: vault-init-sa
  passwordPolicy: |
    length = 20
    rule "charset" {
      charset = "abcdefghijklmnopqrstuvwxyz"
      min-chars = 1
    }
    rule "charset" {
      charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
      min-chars = 1
    }
    rule "charset" {
      charset = "0123456789"
      min-chars = 1
    }
    rule "charset" {
      charset = "!@#$%^&*"
      min-chars = 1
    }
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: RandomSecret
metadata:
  name: postgresql-admin-password
  namespace: sms-proxy
spec:
  authentication: 
    path: kubernetes
    role: vault-config-operator
    serviceAccount:
      name: vault-init-sa
  isKVSecretsEngineV2: false # It's a one-time password anyway, so we don't need KV v2; the root DB password will be rotated by Vault later
  path: kv/sms-proxy
  secretKey: password
  secretFormat:
    passwordPolicyName: postgresql-admin-password-policy
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: postgresql-admin-password
  namespace: sms-proxy
spec:
  vaultSecretDefinitions:
    - authentication:
        path: kubernetes
        role: vault-config-operator
        serviceAccount:
          name: vault-init-sa
      name: postgresql
      path: kv/sms-proxy/postgresql-admin-password
  output:
    name: postgresql-admin-password
    stringData:
      password: '{{ .postgresql.password }}'
    type: Opaque
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: SecretEngineMount
metadata:
  name: postgresql-secret-engine
  namespace: sms-proxy
spec:
  authentication: 
    path: kubernetes
    role: vault-config-operator
    serviceAccount:
      name: vault-init-sa
  type: database
  path: postgresql
---  
apiVersion: redhatcop.redhat.io/v1alpha1
kind: DatabaseSecretEngineConfig
metadata:
  name: postgresql-secret-engine
  namespace: sms-proxy
spec:
  authentication: 
    path: kubernetes
    role: vault-config-operator
    serviceAccount:
      name: vault-init-sa
  pluginName: postgresql-database-plugin
  allowedRoles:
    - postgresql-role-sms-proxy-app
  connectionURL: postgresql://{{username}}:{{password}}@postgresql.sms-proxy.svc.cluster.local:5432
  rootCredentials:
    secret:
      name: postgresql-admin-password
    passwordKey: password
  username: postgres  
  path: postgresql/postgresql-secret-engine
  rootPasswordRotation:
    enable: true
    rotationPeriod: 24h0m0s
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: DatabaseSecretEngineRole
metadata:
  name: postgresql-role-sms-proxy-app
  namespace: sms-proxy
spec:
  authentication: 
    path: kubernetes
    role: vault-config-operator
    serviceAccount:
      name: vault-init-sa
  path: postgresql/postgresql-secret-engine
  defaultTTL: 1h0m0s # Otherwise Terraform fails due to inconsistent output
  maxTTL: 4h0m0s
  dBName: sms-proxy
  creationStatements:
    - CREATE ROLE "{{name}}" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}'; GRANT SELECT, UPDATE, INSERT ON ALL TABLES IN SCHEMA sms-proxy TO "{{name}}";  
