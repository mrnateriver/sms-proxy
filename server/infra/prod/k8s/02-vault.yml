apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vault
  namespace: sms-proxy
spec:
  secretName: tls-vault
  issuerRef:
    name: issuer-leaf
    kind: Issuer
  dnsNames:
    - "vault-active"
    - "*.vault-active"
    # `vault-internal` is the hostname of the Vault service which is used exactly for internal communications between replicas; we can rely on just this hostname because the service is deployed to the same namespace
    - "vault-internal"
    - "*.vault-internal"
  ipAddresses:
    - 127.0.0.1
  duration: 2160h
  renewBefore: 360h
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vault-postgresql-client
  namespace: sms-proxy
spec:
  secretName: tls-vault-postgresql-client
  issuerRef:
    name: issuer-leaf
    kind: Issuer
  commonName: "postgres" # PostgreSQL username
  duration: 2160h
  renewBefore: 360h
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: hashicorp
  namespace: sms-proxy
spec:
  interval: 1h
  url: https://helm.releases.hashicorp.com
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vault
  namespace: sms-proxy
spec:
  interval: 5m
  chart:
    spec:
      chart: vault
      version: 0.29.1
      sourceRef:
        kind: HelmRepository
        name: hashicorp
  releaseName: vault
  values:
    global:
      enabled: true
      tlsDisable: false
    csi:
      enabled: false
    injector:
      enabled: false
    ui:
      enabled: true
      servicePort: 8200
      serviceType: ClusterIP
    server:
      affinity: "" # FIXME: In HA mode pods have anti-affinity for each other; it is removed here to allow deployment on a single node as part of experiments
      image:
        repository: hashicorp/vault
        tag: "1.18.1"
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      livenessProbe:
        enabled: true
        initialDelaySeconds: 60
        path: /v1/sys/health?standbyok=true
      readinessProbe:
        enabled: true
        path: /v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204
      standalone:
        enabled: false
      # TODO: network security policy
      #      networkPolicy:
      #        enabled: false
      auditStorage:
        enabled: true
      extraEnvironmentVars:
        VAULT_CACERT: /vault/userconfig/tls-vault/ca.crt
      extraVolumes:
        - name: tls-vault
          type: secret
        - name: tls-vault-postgresql-client
          type: secret
      dataStorage:
        size: 100Mi
      ha:
        enabled: true
        replicas: 2
        raft:
          enabled: true
          setNodeId: true
          config: |
            ui = true
            cluster_name = "vault-cluster"
            listener "tcp" {
              address = "[::]:8200"
              cluster_address = "[::]:8201"
              tls_cert_file = "/vault/userconfig/tls-vault/tls.crt"
              tls_key_file = "/vault/userconfig/tls-vault/tls.key"
            }

            service_registration "kubernetes" {}

            storage "raft" {
              path = "/vault/data"
              retry_join {
                leader_api_addr = "https://vault-0.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-vault/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-vault/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls-vault/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-1.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-vault/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-vault/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls-vault/tls.key"
              }
            }
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vault-secrets-operator
  namespace: sms-proxy
spec:
  interval: 1h
  chart:
    spec:
      chart: vault-secrets-operator
      version: 0.9.1
      sourceRef:
        kind: HelmRepository
        name: hashicorp
  values:
    defaultVaultConnection:
      enabled: true
      address: "https://vault-active:8200"
      skipTLSVerify: false
      caCertSecret: "tls-vault"
      tlsServerName: ""
    defaultAuthMethod:
      enabled: true
      kubernetes:
        enabled: true
        role: "vault-operator"
        serviceAccount: "vault-operator"
    controller:
      manager:
        clientCache:
          persistenceModel: direct-encrypted
          storageEncryption:
            enabled: true
            mount: kubernetes
            keyName: vso-client-cache
            transitMount: transit
            kubernetes:
              role: vault-operator
              serviceAccount: vault-secrets-operator-controller-manager
              tokenAudiences: ["vault"]
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: vault-config-operator
  namespace: sms-proxy
spec:
  interval: 1h
  url: https://redhat-cop.github.io/vault-config-operator
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vault-config-operator
  namespace: sms-proxy
spec:
  interval: 1h
  chart:
    spec:
      chart: vault-config-operator
      version: v0.8.29
      sourceRef:
        kind: HelmRepository
        name: vault-config-operator
  values:
    enableCertManager: true
    env:
      - name: VAULT_ADDR
        value: https://vault-active:8200
      - name: VAULT_CACERT
        value: /tls-vault/ca.crt
    volumes:
      - name: tls-vault
        secret:
          secretName: tls-vault
    volumeMounts:
      - name: tls-vault
        mountPath: /tls-vault
        readOnly: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-operator
  namespace: sms-proxy
---
# We don't really need this binding, because we're using Vault's SA for TokenReview access, as opposed to using the client's SA (vault-operator in this case)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-operator-tokenreview
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault-operator
    namespace: sms-proxy
