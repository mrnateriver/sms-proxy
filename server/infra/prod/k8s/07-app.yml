apiVersion: redhatcop.redhat.io/v1alpha1
kind: RandomSecret
metadata:
  name: salt-sms-proxy
  namespace: sms-proxy
spec:
  authentication:
    path: kubernetes
    role: vault-operator
    serviceAccount:
      name: vault-operator
  isKVSecretsEngineV2: true
  name: salt
  path: kv2/data/sms-proxy
  secretKey: salt
  secretFormat:
    passwordPolicyName: default
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: salt-sms-proxy
  namespace: sms-proxy
spec:
  type: kv-v2
  mount: kv2
  path: sms-proxy/salt
  destination:
    name: salt-sms-proxy
    create: true
  refreshAfter: 10m
  rolloutRestartTargets:
    - kind: Deployment
      name: sms-proxy
---
apiVersion: v1
kind: Secret
metadata:
  name: secrets-sms-proxy
  namespace: sms-proxy
type: Opaque
data:
  # This secret is intended to be overwritten by VaultStaticSecret below
  api-key: "YXBpLWtleQo=" # api-key
  sentry-dsn: ""
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: secrets-sms-proxy
  namespace: sms-proxy
spec:
  type: kv-v2
  mount: kv2
  path: sms-proxy/secrets-sms-proxy
  destination:
    name: secrets-sms-proxy
    create: false
  refreshAfter: 10m
  rolloutRestartTargets:
    - kind: Deployment
      name: sms-proxy
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultDynamicSecret
metadata:
  name: db-sms-proxy
  namespace: sms-proxy
spec:
  mount: postgresql
  path: postgresql/creds/sms-proxy
  destination:
    name: credentials-db-sms-proxy
    create: true
  rolloutRestartTargets:
    - kind: Deployment
      name: sms-proxy
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: postgresql-client-sms-proxy
  namespace: sms-proxy
spec:
  secretName: tls-postgresql-client-sms-proxy
  issuerRef:
    name: issuer-leaf
    kind: Issuer
  commonName: "sms-proxy"
  duration: 2160h
  renewBefore: 240h
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 4096
    rotationPolicy: Always
  additionalOutputFormats:
    - type: DER
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sms-proxy
  namespace: sms-proxy
data:
  dbUri: jdbc:postgresql://postgresql:5432/sms_proxy?sslmode=verify-full&sslrootcert=/var/run/secrets/tls-postgresql-client-sms-proxy/ca.crt&sslcert=/var/run/secrets/tls-postgresql-client-sms-proxy/tls.crt&sslkey=/var/run/secrets/tls-postgresql-client-sms-proxy/key.der
  metrics-http-port: "4000"
  server-port: "3000"
  log-level: "info"
  otlp-tracing-grpc-url: ""
  otlp-service-name: "sms-proxy"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sms-proxy
  namespace: sms-proxy
  labels:
    app: sms-proxy
    app.kubernetes.io/name: sms-proxy
    app.kubernetes.io/instance: sms-proxy-deployment
    app.kubernetes.io/component: sms-proxy
    app.kubernetes.io/part-of: sms-proxy
  annotations:
    wave.pusher.com/update-on-config-change: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sms-proxy
  template:
    metadata:
      labels:
        app: sms-proxy
        app.kubernetes.io/name: sms-proxy
        app.kubernetes.io/instance: sms-proxy
        app.kubernetes.io/component: sms-proxy
        app.kubernetes.io/part-of: sms-proxy
    spec:
      volumes:
        - name: tls-postgresql-client-sms-proxy
          secret:
            secretName: tls-postgresql-client-sms-proxy
      imagePullSecrets:
        - name: credentials-docker-oci-registry
      containers:
        - name: sms-proxy
          image: "oci-registry:5000/sms-proxy/sms-proxy:latest"
          resources:
            limits:
              memory: "256Mi"
              cpu: 2
          ports:
            - name: http
              containerPort: 3000
            - name: metrics
              containerPort: 4000
          livenessProbe: &livenessProbe
            httpGet:
              path: /healthz
              port: http
            failureThreshold: 2
            periodSeconds: 5
          readinessProbe: *livenessProbe
          startupProbe:
            <<: *livenessProbe
            periodSeconds: 5
            initialDelaySeconds: 10
          securityContext: # TODO: re-evaluate
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsNonRoot: true
            runAsUser: 2000
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: tls-postgresql-client-sms-proxy
              readOnly: true
              mountPath: "/var/run/secrets/tls-postgresql-client-sms-proxy"
          env:
            - name: OTLP_TRACING_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy
                  key: otlp-tracing-grpc-url
            - name: OTLP_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy
                  key: otlp-service-name
            - name: KTOR_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy
                  key: log-level
            - name: SERVER_HOST
              value: "0.0.0.0"
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy
                  key: server-port
            - name: METRICS_HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy
                  key: metrics-http-port
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets-sms-proxy
                  key: api-key
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: secrets-sms-proxy
                  key: sentry-dsn
            - name: DB_JDBC_URI
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy
                  key: dbUri
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: credentials-db-sms-proxy
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: credentials-db-sms-proxy
                  key: password
            - name: HASHING_SECRET
              valueFrom:
                secretKeyRef:
                  name: salt-sms-proxy
                  key: salt
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
---
apiVersion: v1
kind: Service
metadata:
  name: sms-proxy
  namespace: sms-proxy
  labels:
    app.kubernetes.io/name: sms-proxy
    app.kubernetes.io/instance: sms-proxy-service
    app.kubernetes.io/component: sms-proxy
    app.kubernetes.io/part-of: sms-proxy
spec:
  type: ClusterIP
  selector:
    app: sms-proxy
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP
    - name: metrics
      port: 4000
      targetPort: 4000
      protocol: TCP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: sms-proxy
  namespace: sms-proxy
spec:
  endpoints:
    - port: metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: sms-proxy
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sms-proxy-server
  namespace: sms-proxy
spec:
  secretName: tls-server-sms-proxy
  issuerRef:
    name: issuer-leaf
    kind: Issuer
  commonName: "sms-proxy"
  duration: 43800h # Since trust chain is embedded in distributable Android apps, we need a longer duration
  renewBefore: 240h
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 4096
    rotationPolicy: Always
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sms-proxy-relay
  namespace: sms-proxy
spec:
  secretName: tls-relay-sms-proxy
  issuerRef:
    name: issuer-leaf
    kind: Issuer
  commonName: "relay-app"
  duration: 43800h # Since trust chain is embedded in distributable Android apps, we need a longer duration
  renewBefore: 240h
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 4096
    rotationPolicy: Always
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sms-proxy-receiver
  namespace: sms-proxy
spec:
  secretName: tls-receiver-sms-proxy
  issuerRef:
    name: issuer-leaf
    kind: Issuer
  commonName: "receiver-app"
  duration: 43800h # Since trust chain is embedded in distributable Android apps, we need a longer duration
  renewBefore: 240h
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 4096
    rotationPolicy: Always
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: sms-proxy
  namespace: sms-proxy
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Path(`/metrics`)
      observability:
        accessLogs: false
        metrics: false
        tracing: false
      services:
        - name: sms-proxy
          port: metrics
          nativeLB: true
    - kind: Rule
      match: PathPrefix(`/`)
      services:
        - name: sms-proxy
          port: http
          nativeLB: true
