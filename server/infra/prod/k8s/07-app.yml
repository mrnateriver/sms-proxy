apiVersion: redhatcop.redhat.io/v1alpha1
kind: RandomSecret
metadata:
  name: sms-proxy-hashing-secret
  namespace: sms-proxy
spec:
  authentication:
    path: kubernetes
    role: vault-operator
    serviceAccount:
      name: vault-operator-sa
  isKVSecretsEngineV2: true
  name: hashing-secret
  path: kv2/data/sms-proxy
  secretKey: hashing-secret
  secretFormat:
    passwordPolicyName: default-password-policy
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: sms-proxy-vault-secret-hashing-secret
  namespace: sms-proxy
spec:
  type: kv-v2
  mount: kv2
  path: sms-proxy/hashing-secret
  destination:
    name: sms-proxy-secret-hashing-secret
    create: true
  refreshAfter: 10m
  rolloutRestartTargets:
    - kind: Deployment
      name: sms-proxy
---
apiVersion: v1
kind: Secret
metadata:
  name: sms-proxy-secret-common
  namespace: sms-proxy
type: Opaque
data:
  # This secret is intended to be overwritten by VaultStaticSecret below
  api-key: "YXBpLWtleQo=" # api-key
  sentry-dsn: ""
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: sms-proxy-vault-secret-common
  namespace: sms-proxy
spec:
  type: kv-v2
  mount: kv2
  path: sms-proxy/sentry-dsn
  destination:
    name: sms-proxy-secret-common
    create: false
  refreshAfter: 10m
  rolloutRestartTargets:
    - kind: Deployment
      name: sms-proxy
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultDynamicSecret
metadata:
  name: sms-proxy-vault-secret-db
  namespace: sms-proxy
spec:
  mount: postgresql
  path: postgresql-secret-engine/creds/postgresql-role-sms-proxy-app
  destination:
    name: sms-proxy-secret-db
    create: true
  rolloutRestartTargets:
    - kind: Deployment
      name: sms-proxy
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sms-proxy-certificate-postgresql-client
  namespace: sms-proxy
spec:
  secretName: sms-proxy-secret-postgresql-client
  issuerRef:
    name: issuer-leaf
    kind: Issuer
  commonName: "sms-proxy"
  duration: 2160h
  renewBefore: 360h
  privateKey:
    algorithm: RSA
    encoding: PKCS8
    size: 4096
    rotationPolicy: Always
  additionalOutputFormats:
    - type: DER
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sms-proxy-config
  namespace: sms-proxy
data:
  dbUri: jdbc:postgresql://postgresql.sms-proxy.svc.cluster.local:5432/sms_proxy?sslmode=verify-full&sslrootcert=/var/run/secrets/sms-proxy-secret-postgresql-client/ca.crt&sslcert=/var/run/secrets/sms-proxy-secret-postgresql-client/tls.crt&sslkey=/var/run/secrets/sms-proxy-secret-postgresql-client/key.der
  metrics-http-port: "4000"
  server-port: "3000"
  log-level: "info"
  otlp-tracing-grpc-url: ""
  otlp-service-name: "sms-proxy"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sms-proxy
  namespace: sms-proxy
  labels:
    app: sms-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sms-proxy
  template:
    metadata:
      labels:
        app: sms-proxy
    spec:
      volumes:
        - name: sms-proxy-secret-postgresql-client
          secret:
            secretName: sms-proxy-secret-postgresql-client
      containers:
        - name: sms-proxy
          image: sms-proxy:latest # FIXME: local OCI image in the cluster
          imagePullPolicy: Never # FIXME: remove once actual OCI repository is available
          resources:
            limits:
              memory: "256Mi"
              cpu: "250m"
          ports:
            - name: http
              containerPort: 3000
            - name: metrics
              containerPort: 4000
          livenessProbe: &livenessProbe
            httpGet:
              path: /healthz
              port: http
            failureThreshold: 2
            periodSeconds: 5
          readinessProbe: *livenessProbe
          startupProbe:
            <<: *livenessProbe
            periodSeconds: 5
            initialDelaySeconds: 10
          securityContext: # TODO: re-evaluate
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsNonRoot: true
            runAsUser: 2000
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: sms-proxy-secret-postgresql-client
              readOnly: true
              mountPath: "/var/run/secrets/sms-proxy-secret-postgresql-client"
          env:
            - name: OTLP_TRACING_GRPC_URL
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy-config
                  key: otlp-tracing-grpc-url
            - name: OTLP_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy-config
                  key: otlp-service-name
            - name: KTOR_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy-config
                  key: log-level
            - name: SERVER_HOST
              value: "0.0.0.0"
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy-config
                  key: server-port
            - name: METRICS_HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy-config
                  key: metrics-http-port
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: sms-proxy-secret-common
                  key: api-key
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sms-proxy-secret-common
                  key: sentry-dsn
            - name: DB_JDBC_URI
              valueFrom:
                configMapKeyRef:
                  name: sms-proxy-config
                  key: dbUri
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: sms-proxy-secret-db
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sms-proxy-secret-db
                  key: password
            - name: HASHING_SECRET
              valueFrom:
                secretKeyRef:
                  name: sms-proxy-secret-hashing-secret
                  key: hashing-secret
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
---
apiVersion: v1
kind: Service
metadata:
  name: sms-proxy
  namespace: sms-proxy
  labels:
    app.kubernetes.io/name: sms-proxy
spec:
  type: ClusterIP
  selector:
    app: sms-proxy
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP
    - name: metrics
      port: 4000
      targetPort: 4000
      protocol: TCP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: sms-proxy-monitor
  namespace: sms-proxy
spec:
  endpoints:
    - port: metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: sms-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sms-proxy-ingress
  namespace: sms-proxy
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  ingressClassName: traefik
  rules:
    - http:
        paths:
          - path: /metrics
            pathType: Exact
            backend:
              service:
                name: sms-proxy
                port:
                  name: metrics
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sms-proxy
                port:
                  name: http
