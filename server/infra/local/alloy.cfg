logging {
    level  = "info"
    format = "logfmt"
}

discovery.docker "linux" {
  host             = "unix:///var/run/docker.sock"
  refresh_interval = "5s"
}

discovery.relabel "scrape" {
  targets = []
  rule {
    source_labels = ["__meta_docker_container_name"]
    regex         = "/(.*)"
    target_label  = "service_name"
  }
  rule {
    source_labels = ["__meta_docker_container_id"]
    target_label  = "container_id"
  }
}

loki.source.docker "default" {
  host          = "unix:///var/run/docker.sock"
  targets       = discovery.docker.linux.targets
  forward_to    = [loki.process.local.receiver]
  relabel_rules = discovery.relabel.scrape.rules
}

loki.process "local" {
  forward_to = [loki.write.local.receiver]

  stage.json {
      expressions = { "trace_id" = "mdc.trace_id", "span_id" = "mdc.span_id" }
  }

  stage.labels {
      values = {
            "trace_id" = "",
            "span_id" = "",
      }
  }
}

loki.write "local" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

otelcol.receiver.otlp "otlp_receiver" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }

  output {
    traces = [otelcol.exporter.otlp.tempo.input]
  }
}

otelcol.exporter.otlp "tempo" {
  client {
    endpoint = "tempo:4317"
    tls {
        insecure = true
    }
  }
}
