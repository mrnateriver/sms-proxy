@startuml C4 Container
!include <C4/C4_Container>
LAYOUT_WITH_LEGEND()

Person(person, "User")

Container(relayApp, "Relay App", "Android, Kotlin, Jetpack Compose", "Android app that processes incoming SMS and sends them to the backend service")
Container(receiverApp, "Receiver App", "Android, Kotlin, Jetpack Compose", "Android app that receives push notifications with encrypted messages and displays them to the user with mandatory authentication")

Container(proxyService, "Message Proxy Service", "Kotlin, Ktor, SQLDelight, Firebase", "Backend service that handles the secure exchange of messages between the two apps")
ContainerDb(proxyServiceDb, "PostgreSQL", "", "Stores messages encrypted with keys generated by receiver apps for audit purposes")

System_Ext(firebase, "Firebase", "Used for sending push notifications to receiver apps")

Rel(person, relayApp, "Configures with server URI and receiver key")
Rel(person, relayApp, "Installs and runs at least once on the source device")

Rel(relayApp, proxyService, "Sends SMS contents for the specified receiver key via HTTPS using mTLS + PK pinning")
Rel(proxyService, proxyServiceDb, "Encrypts the message using receiver's public key and stores it for audit purposes (if specified receiver key is registered; otherwise discards the message)")
Rel(proxyService, firebase, "Sends a push notification with encrypted message contents; encryption is done in the same way as for storage")

Rel(firebase, receiverApp, "Delivers push notifications with encrypted message contents")
Rel(receiverApp, firebase, "Requests an FCM key")

Rel(receiverApp, proxyService, "Registers itself during the first run, providing an FCM key and an RSA public key")
Rel(proxyService, receiverApp, "Generates and returns a unique receiver key upon receiver's registration")

Rel(receiverApp, person, "Shows the generated receiver key so that the user can configure the relay app with it")

Rel(person, receiverApp, "Installs and runs at least once on the destination device")
Rel(person, receiverApp, "Opens every time a push notification is received, authenticates using the fingerprint or a PIN, and decrypts the message")

@enduml