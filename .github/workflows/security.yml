name: Security Checks
on:
  workflow_call:
    secrets:
      snyk-token:
        description: 'Snyk API token for security scanning.'
        required: true
      sonar-token:
        description: 'SonarQube API token for security scanning.'
        required: true
      api-key:
        description: 'API key for the server.'
        required: true
    inputs:
      pr:
        description: 'Whether the workflow is executed for a PR, as opposed to a protected branch.'
        type: boolean
        default: false
      sonar-project-key:
        description: 'SonarQube project key.'
        type: string
        required: true
      sonar-organization:
        description: 'SonarQube organization.'
        type: string
        required: true

jobs:
  secrets:
    name: Secret Scanning
    runs-on: ubuntu-latest
    if: ${{ inputs.pr }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          base: ""
          head: ${{ github.ref_name }}
          extra_args: --only-verified

  snyk-test:
    name: Snyk - OSS & License Checks
    runs-on: ubuntu-latest
    env:
      SNYK_TOKEN: ${{ secrets.snyk-token }}
      API_KEY: ${{ secrets.api-key }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: OSS & License Checks
        uses: snyk/actions/gradle@master
        with:
          command: test
          args: --severity-threshold=high --all-sub-projects

      - name: Report findings
        uses: snyk/actions/gradle@master
        with:
          command: monitor
          args: --severity-threshold=high --all-sub-projects

  snyk-iac:
    name: Snyk - IAC
    runs-on: ubuntu-latest
    env:
      SNYK_TOKEN: ${{ secrets.snyk-token }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: IAC
        uses: snyk/actions/gradle@master
        with:
          command: iac test
          args: --severity-threshold=high

  snyk-code:
    name: Snyk - Code
    runs-on: ubuntu-latest
    env:
      SNYK_TOKEN: ${{ secrets.snyk-token }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Code
        uses: snyk/actions/gradle@master
        with:
          command: code test
          args: --severity-threshold=high --all-sub-projects

  sonar:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK & Gradle
        uses: ./.github/actions/prepare-gradle

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarQube scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.sonar-token }}
          API_KEY: ${{ secrets.api-key }}

      - name: SonarQube gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.sonar-token }}
        with:
          pollingTimeoutSec: 600
