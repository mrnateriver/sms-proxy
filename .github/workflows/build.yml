name: Build
on:
  workflow_call:
    inputs:
      release:
        description: 'Whether to build a signed release APK, or merely perform a build without assembling an APK.'
        type: boolean
        default: false

jobs:
  build-relay:
    name: Relay Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Setup JDK & Gradle
        uses: ./.github/actions/prepare-gradle

      - name: Add TLS certificates and keys
        if: ${{ inputs.release }}
        env:
          RELAY_APP_PRIVATE_KEY_PEM: ${{ secrets.RELAY_APP_PRIVATE_KEY_PEM }}
        run: |
          echo $RELAY_APP_PRIVATE_KEY_PEM > ./relayApp/src/androidMain/assets/proxy-api-client-certificate-private-key.pem
          echo $RELAY_APP_CERTIFICATE_PEM > ./relayApp/src/androidMain/assets/proxy-api-client-certificate.pem
          echo $SERVER_CERTIFICATE_PEM > ./relayApp/src/androidMain/assets/proxy-api-server-certificate.pem

      - name: Decode keystore
        if: ${{ inputs.release }}
        env:
          ENCODED_STRING: ${{ secrets.RELEASE_STORE_BASE64 }}
        run: |
          echo $ENCODED_STRING | base64 -d > release.keystore

      - name: Build signed release APK
        if: ${{ inputs.release }}
        env:
          RELEASE_STORE_PATH: release.keystore
          RELEASE_STORE_KEY_ALIAS: ${{ secrets.RELEASE_STORE_KEY_ALIAS }}
          RELEASE_STORE_KEY_PASSWORD: ${{ secrets.RELEASE_STORE_KEY_PASSWORD }}
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
        run: ./gradlew relayApp:assembleRelease

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ inputs.release }}
        with:
          name: release-apk-relay
          path: relayApp/build/outputs/apk/release/relayApp-release.apk

      - name: Check build
        if: ${{ !inputs.release }}
        run: ./gradlew relayApp:build

  build-receiver:
    name: Receiver Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Setup JDK & Gradle
        uses: ./.github/actions/prepare-gradle

      - name: Add TLS certificates and keys
        if: ${{ inputs.release }}
        env:
          RECEIVER_APP_PRIVATE_KEY_PEM: ${{ secrets.RECEIVER_APP_PRIVATE_KEY_PEM }}
        run: |
          echo $RECEIVER_APP_PRIVATE_KEY_PEM > ./receiverApp/src/androidMain/assets/proxy-api-client-certificate-private-key.pem
          echo $RECEIVER_APP_CERTIFICATE_PEM > ./receiverApp/src/androidMain/assets/proxy-api-client-certificate.pem
          echo $SERVER_CERTIFICATE_PEM > ./receiverApp/src/androidMain/assets/proxy-api-server-certificate.pem

      - name: Decode keystore
        if: ${{ inputs.release }}
        env:
          ENCODED_STRING: ${{ secrets.RELEASE_STORE_BASE64 }}
        run: |
          echo $ENCODED_STRING | base64 -d > release.keystore

      - name: Build signed release APK
        if: ${{ inputs.release }}
        env:
          RELEASE_STORE_PATH: release.keystore
          RELEASE_STORE_KEY_ALIAS: ${{ secrets.RELEASE_STORE_KEY_ALIAS }}
          RELEASE_STORE_KEY_PASSWORD: ${{ secrets.RELEASE_STORE_KEY_PASSWORD }}
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
        run: ./gradlew receiverApp:assembleRelease

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ inputs.release }}
        with:
          name: release-apk-receiver
          path: receiverApp/build/outputs/apk/release/receiverApp-release.apk

      - name: Check build
        if: ${{ !inputs.release }}
        run: ./gradlew relayApp:build

  build-server:
    name: Server Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Setup JDK & Gradle
        uses: ./.github/actions/prepare-gradle

      - name: Add TLS certificates and keys
        if: ${{ inputs.release }}
        env:
          SERVER_PRIVATE_KEY_JKS_BASE64: ${{ secrets.SERVER_PRIVATE_KEY_JKS_BASE64 }}
        run: |
          echo $RELAY_APP_CERTIFICATE_PEM > ./server/src/main/resources/clients/proxy-api-relay-app.pem
          echo $RECEIVER_APP_CERTIFICATE_PEM > ./server/src/main/resources/clients/proxy-api-receiver-app.pem
          echo $SERVER_PRIVATE_KEY_JKS_BASE64 | base64 -d > ./server/src/main/resources/proxy-api-server-certificate.jks

      # TODO: build container image, yield image hash
      - name: Build release image
        if: ${{ inputs.release }}
        run: ./gradlew server:build # FIXME: proper Gradle task name

      - name: Check build
        if: ${{ !inputs.release }}
        run: ./gradlew server:build
